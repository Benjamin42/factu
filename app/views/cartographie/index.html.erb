<%= render :template => 'commons/_header' %>

    <style>
      #directionsPanel {
        height: 100%;
        float: right;
        width: 390px;
        overflow: auto;
      }
      
      .adp-text {
      	padding-left : 40px;
      }

      #map-canvas {
        margin-right: 400px;
      }

      #control {
        background: #fff;
        padding: 5px;
        font-size: 14px;
        font-family: Arial;
        border: 1px solid #ccc;
        box-shadow: 0 2px 2px rgba(33, 33, 33, 0.4);
        display: none;
      }

      @media print {
        #map-canvas {
          height: 500px;
          margin: 0;
        }

        #directionsPanel {
          float: none;
          width: auto;
        }
      }
    </style>
    
<h1>Cartographie</h1>
	<br />
	<div id="directionsPanel" style="">
    </div>	
	
	<div class="container-fluid">
		<div class="row-fluid">
			<div class="span6">
				<!--Sidebar content-->
				<div id="map_canvas" style="width:600px; height:600px;" class="center"></div>
			</div>
			<div class="span6">
				<!--Body content-->
				
				
				<table class="table" id="clients_map">
					<thead>
					  <tr>
					  	<th class="sSortableNone"><input type="checkbox" id="checkAllAuto" onclick="checkAll();"></th>
					    <th>Nom</th>
					    <th>Adresse</th>
					  </tr>
				  	</thead>
					<tbody>
						<% @clients.each do |client| %>
						  <tr>
						  	<td><input type="checkbox" id="checkboxChange_<%= client.id %>" onclick="inverseMarck(<%= client.id %>);"></td>
						    <td><%= client.nom %></td>
						    <td><%= client.long_adresse %></td>
						  </tr>
						<% end %>
					</tbody>
				</table>
				
				
			</div>
		</div>
	</div>


<script>
	var directionDisplay;
	var directionsService;;
	var map;
	var hashMarcker = new Object();
	var lastOpenInfoWindow = null;
	
	function checkAll() {
		var re = new RegExp(/^checkboxChange_\d+$/);
	       					
		var checked = $('#checkAllAuto').is(':checked');
		if (checked){
			$('input[type=checkbox]').each(function () {
				if (this.id.match(re) && $(this).is(':not(:checked)')) {
					$(this).click();
				}
			});
		} else {
			$('input[type=checkbox]').each(function () {
				if (this.id.match(re) && $(this).is(':checked')) {
					$(this).click();
				}
			});	        				
    	}	
    }	
	
	function inverseMarck(id) {
		var marcker = hashMarcker[id];
		
		if (marcker.getMap() == null) {
			marcker.setMap(map);
		} else {
			marcker.setMap(null);
		}
	}
	
	function addMarck(latitude, longitude, name, id, adresse) {
		var infowindow = new google.maps.InfoWindow({
            content: createContent(name, adresse),
            maxWidth: 200
        });
        
		var marker = new google.maps.Marker({
	    	position: new google.maps.LatLng(latitude, longitude),
	        map: null,
	        title: name
		});        
        
        google.maps.event.addListener(marker, 'click', function() {
          infowindow.open(map, marker);
          if (lastOpenInfoWindow != null) {
          	lastOpenInfoWindow.close();
          }
          lastOpenInfoWindow = infowindow;
        });
        
	  	hashMarcker[id] = marker;
	}
	
	function createContent(name, adresse) {
        var contentString = '';
        contentString += '<span class="label label-important">Nom</span> : ' + name + "<br/>";
        contentString += '<span class="label label-important">Adresse</span> : ' + adresse + "<br/>";
		return contentString;
	}
      
	function initialize() {
		directionsService = new google.maps.DirectionsService()
		directionsDisplay = new google.maps.DirectionsRenderer();
		
	  	var mapOptions = {
	  		center: new google.maps.LatLng(46.227638, 2.213749),
	  		zoom: 6,
	    	mapTypeId: google.maps.MapTypeId.ROADMAP
	  	}
	  
	  	map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
		
		<% @clients.each do |client| %>
			addMarck(<%= client.latitude %>, <%= client.longitude %>, '<%= client.nom %>', <%= client.id %>, '<%= client.long_adresse %>');
		<% end %>
		
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('directionsPanel'));
        		
		google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
          computeTotalDistance(directionsDisplay.directions);
        });
        
		 //calcRoute();
	}
	
  function computeTotalDistance(result) {
    var total = 0;
    var myroute = result.routes[0];
    for (i = 0; i < myroute.legs.length; i++) {
      total += myroute.legs[i].distance.value;
    }
    total = total / 1000.
    //document.getElementById('total').innerHTML = total + ' km';
  }  	
	
	function loadScript() {
	  var script = document.createElement("script");
	  script.type = "text/javascript";
	  script.src = "http://maps.googleapis.com/maps/api/js?key=AIzaSyDIt0UOzmMBSaklD-XUtSqATQKaRp4HF5E&sensor=false&callback=initialize";
	  document.body.appendChild(script);
	}
	
	loadScript();
	

  function calcRoute() {
    var start = "11 rue des ternes paris";
    var end = "11 rue des ternes paris";
    var waypts = [];
    var checkboxArray = document.getElementById('waypoints');
        waypts.push({
            location:"18 rue euzenat 51530 magenta",
            stopover:true});

    var request = {
        origin: start,
        destination: end,
        waypoints: waypts,
        optimizeWaypoints: true,
        travelMode: google.maps.DirectionsTravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        var route = response.routes[0];
        var summaryPanel = document.getElementById('directionsPanel');
        summaryPanel.innerHTML = '';
        // For each route, display summary information.
        for (var i = 0; i < route.legs.length; i++) {
          var routeSegment = i + 1;
          summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
          summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
          summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
          summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
        }
      }
    });
    
  
  }	
</script>